student_class =>

CREATE TABLE student_class (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT NOT NULL,
    class_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (student_id) REFERENCES users(id),
    FOREIGN KEY (class_id) REFERENCES classes(id)
);

teacher_class =>

CREATE TABLE teacher_class (
    id INT AUTO_INCREMENT PRIMARY KEY,
    teacher_id INT NOT NULL,
    class_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (teacher_id) REFERENCES users(id),
    FOREIGN KEY (class_id) REFERENCES classes(id)
);

parent_student =>

CREATE TABLE parent_student (
    id INT AUTO_INCREMENT PRIMARY KEY,
    parent_id INT NOT NULL,
    student_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (parent_id) REFERENCES users(id),
    FOREIGN KEY (student_id) REFERENCES users(id)
);


عدم تكرار اسم الصف :
ALTER TABLE classes ADD UNIQUE (className);


اضافة بيانات عبر sql الى اسم الصف 
INSERT INTO classes (class_name) VALUES ('الصف الأول'), ('الصف الثاني'), ('الصف الثالث');


اظهار teacher من users فقط
$query = "SELECT id, name, email, status FROM users WHERE role = 'teacher'";


اظهار الغير مقبولين والمحظورين 
$query = "SELECT id, name, email FROM users WHERE role = 'teacher' AND status IN ('pending', 'blocked')";


users =>

CREATE TABLE users (
    id VARCHAR(255) PRIMARY KEY,
    name VARCHAR(255),
    email VARCHAR(255),
    role ENUM('student', 'teacher', 'admin')
);

 إضافة حقل status إلى جدول users
ALTER TABLE users ADD COLUMN status ENUM('pending', 'accepted', 'blocked') DEFAULT 'pending';


student_daily_reports =>

CREATE TABLE student_daily_reports (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT NOT NULL,
    teacher_id INT NOT NULL,
    class_id INT NOT NULL,
    date DATE NOT NULL DEFAULT CURRENT_DATE,
    assessment ENUM('ممتاز', 'جيد', 'متوسط', 'ضعيف') NOT NULL,
    note TEXT,
    file_path VARCHAR(255),
    audio_note_path VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (student_id) REFERENCES users(id),
    FOREIGN KEY (teacher_id) REFERENCES users(id),
    FOREIGN KEY (class_id) REFERENCES classes(id)
);




reprts =>

CREATE TABLE reports (
    id INT AUTO_INCREMENT PRIMARY KEY,
    student_id INT NOT NULL,
    teacher_id INT NOT NULL,
    assessment ENUM('ممتاز', 'جيد', 'متوسط', 'ضعيف') NOT NULL,
    note TEXT,
    file_path VARCHAR(255),
    audio_path VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (student_id) REFERENCES users(id),
    FOREIGN KEY (teacher_id) REFERENCES users(id)
);


